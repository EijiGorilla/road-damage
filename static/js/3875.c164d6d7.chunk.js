"use strict";(self.webpackChunkroad_damage=self.webpackChunkroad_damage||[]).push([[3875],{23875:(e,t,i)=>{i.r(t),i.d(t,{default:()=>M});var r=i(35143),a=i(3825),o=i(50076),s=i(30726),l=i(77717),n=i(50346),p=i(90534),c=i(46053),d=(i(81806),i(76460),i(47249),i(28379)),h=i(85842),y=i(91605),u=i(25515),v=i(76328),w=i(19502),g=i(11270),m=i(94729),b=i(55053),T=i(2052),_=i(60883);let f=class extends((0,v.f)((0,w.b)((0,g.q)((0,m.A)((0,l.P)(u.A)))))){constructor(){super(...arguments),this.capabilities={operations:{supportsTileMap:!1}},this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=(0,_.b)()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._lercDecoder=(0,s.Gz)(this._lercDecoder)}readCapabilities(e,t){const i=t.capabilities&&t.capabilities.split(",").map((e=>e.toLowerCase().trim()));return i?{operations:{supportsTileMap:i.includes("tilemap")}}:{operations:{supportsTileMap:!1}}}readVersion(e,t){let i=t.currentVersion;return i||(i=9.3),i}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{if(e.typeKeywords)for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new o.A("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(n.QP).then((()=>this._fetchImageService(t)))),Promise.resolve(this)}fetchTile(e,t,i,r){const o=null!=(r=r||{signal:null}).signal?r.signal:r.signal=(new AbortController).signal,s={responseType:"array-buffer",signal:o},l={noDataValue:r.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,i,r))).then((()=>(0,a.A)(this.getTileUrl(e,t,i),s))).then((e=>this._lercDecoder.decode(e.data,l,o))).then((e=>new T.i(e)))}getTileUrl(e,t,i){const r=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,a=(0,p.x0)({...this.parsedUrl.query,blankTile:!r&&null});return"".concat(this.parsedUrl.path,"/tile/").concat(e,"/").concat(t,"/").concat(i).concat(a?"?"+a:"")}async queryElevation(e,t){const{ElevationQuery:r}=await i.e(3571).then(i.bind(i,3571));return(0,n.Te)(t),(new r).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:r}=await i.e(3571).then(i.bind(i,3571));return(0,n.Te)(t),(new r).createSampler(this,e,t)}_fetchTileAvailability(e,t,i,r){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,i,r):Promise.resolve("unknown")}async _fetchImageService(e){var t;if(this.sourceJSON)return this.sourceJSON;const i={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},r=await(0,a.A)(this.parsedUrl.path,i);r.ssl&&(this.url=null===(t=this.url)||void 0===t?void 0:t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile[S]}};(0,r._)([(0,c.MZ)({readOnly:!0})],f.prototype,"capabilities",void 0),(0,r._)([(0,d.w)("service","capabilities",["capabilities"])],f.prototype,"readCapabilities",null),(0,r._)([(0,c.MZ)({json:{read:{source:"copyrightText"}}})],f.prototype,"copyright",void 0),(0,r._)([(0,c.MZ)({readOnly:!0,type:y.A})],f.prototype,"heightModelInfo",void 0),(0,r._)([(0,c.MZ)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],f.prototype,"path",void 0),(0,r._)([(0,c.MZ)({type:["show","hide"]})],f.prototype,"listMode",void 0),(0,r._)([(0,c.MZ)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],f.prototype,"minScale",void 0),(0,r._)([(0,c.MZ)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],f.prototype,"maxScale",void 0),(0,r._)([(0,c.MZ)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],f.prototype,"opacity",void 0),(0,r._)([(0,c.MZ)({type:["ArcGISTiledElevationServiceLayer"]})],f.prototype,"operationalLayerType",void 0),(0,r._)([(0,c.MZ)()],f.prototype,"sourceJSON",void 0),(0,r._)([(0,c.MZ)({json:{read:!1},value:"elevation",readOnly:!0})],f.prototype,"type",void 0),(0,r._)([(0,c.MZ)(b.OZ)],f.prototype,"url",void 0),(0,r._)([(0,c.MZ)()],f.prototype,"version",void 0),(0,r._)([(0,d.w)("version",["currentVersion"])],f.prototype,"readVersion",null),f=(0,r._)([(0,h.$)("esri.layers.ElevationLayer")],f);const S=Symbol("default-fetch-tile");f.prototype.fetchTile[S]=!0;const M=f}}]);
//# sourceMappingURL=3875.c164d6d7.chunk.js.map